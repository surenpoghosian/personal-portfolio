{"version":3,"file":"component---src-pages-projects-tsx-a635494dba09ad60900b.js","mappings":"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","sources":["webpack://surenpoghosian.github.io/./node_modules/@react-icons/all-files/fa/FaNewspaper.js","webpack://surenpoghosian.github.io/./node_modules/@react-icons/all-files/gi/GiAchievement.js","webpack://surenpoghosian.github.io/./src/components/shared/CardTitle.tsx","webpack://surenpoghosian.github.io/./src/components/shared/CardActions.tsx","webpack://surenpoghosian.github.io/./src/components/elements/ProjectPreview.tsx","webpack://surenpoghosian.github.io/./src/components/elements/ProjectsList.tsx","webpack://surenpoghosian.github.io/./src/components/elements/ProjectFilters.tsx","webpack://surenpoghosian.github.io/./src/utils/ssr.ts","webpack://surenpoghosian.github.io/./src/components/screens/ProjectsScreen.tsx","webpack://surenpoghosian.github.io/./src/pages/projects.tsx"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FaNewspaper = function FaNewspaper (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 576 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.GiAchievement = function GiAchievement (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 512 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M305.975 298.814l22.704 2.383V486l-62.712-66.965V312.499l18.214 8.895zm-99.95 0l-22.716 2.383V486l62.711-66.965V312.499l-18.213 8.895zm171.98-115.78l7.347 25.574-22.055 14.87-1.847 26.571-25.81 6.425-10.803 24.314-26.46-2.795-18.475 19.087L256 285.403l-23.902 11.677-18.475-19.15-26.46 2.795-10.803-24.313-25.81-6.363-1.847-26.534-22.118-14.92 7.348-25.573-15.594-21.544 15.644-21.52-7.398-25.523 22.068-14.87L150.5 73.03l25.86-6.362 10.803-24.313 26.46 2.794L232.098 26 256 37.677 279.902 26l18.475 19.149 26.46-2.794 10.803 24.313 25.81 6.425 1.847 26.534 22.055 14.87-7.347 25.574 15.656 21.407zm-49.214-21.556a72.242 72.242 0 1 0-72.242 72.242 72.355 72.355 0 0 0 72.242-72.242zm-72.242-52.283a52.282 52.282 0 1 0 52.282 52.283 52.395 52.395 0 0 0-52.282-52.245z\"}}]})(props);\n};\n","import React from 'react';\nimport H, { hLevel } from './H';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardTitleProps = {\n  children: React.ReactNode,\n  link?: Link,\n};\n\nconst CardTitle = (props: CardTitleProps): React.ReactElement | null => {\n  const { children, link } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const headerElement = (\n    <H level={hLevel.h3}>\n      {children}\n    </H>\n  );\n\n  const linkElement = link ? (\n    <HyperLink link={link}>\n      {headerElement}\n    </HyperLink>\n  ) : null;\n\n  return (\n    <div className=\"mb-3\">\n      {linkElement || headerElement}\n    </div>\n  );\n};\n\nexport default CardTitle;\n","import React from 'react';\nimport Row from './Row';\n\ntype CardActionsProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst CardActions = (props: CardActionsProps): React.ReactElement | null => {\n  const { children, className = 'px-6 pb-6' } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <Row>\n        {children}\n      </Row>\n    </div>\n  );\n};\n\nexport default CardActions;\n","/* eslint-disable indent */\n/* eslint-disable operator-linebreak */\n/* eslint-disable max-len */\nimport React from 'react';\nimport { IoPlay } from '@react-icons/all-files/io5/IoPlay';\nimport { FaNewspaper } from '@react-icons/all-files/fa/FaNewspaper';\nimport { FaGithub } from '@react-icons/all-files/fa/FaGithub';\nimport { BiInfoCircle } from '@react-icons/all-files/bi/BiInfoCircle';\nimport { GiAchievement } from '@react-icons/all-files/gi/GiAchievement';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport DateRange from '../shared/DateRange';\nimport Card from '../shared/Card';\nimport CardContent from '../shared/CardContent';\nimport CardMedia from '../shared/CardMedia';\nimport Tags from '../shared/Tags';\nimport FluidImage from '../shared/FluidImage';\nimport CardTitle from '../shared/CardTitle';\nimport CardActions from '../shared/CardActions';\nimport ButtonLink from '../shared/ButtonLink';\nimport Archived from '../shared/Archived';\nimport Stars from '../shared/Stars';\nimport Row from '../shared/Row';\nimport { getGitHubProjectStars, getProjectAchievementsLink } from '../../utils/project';\nimport { Link } from '../../types/Link';\nimport HyperLink from '../shared/HyperLink';\nimport Badge from '../shared/Badge';\n\ntype ProjectPreviewProps = {\n  project: ProjectType | null,\n};\n\nconst tagsPerProject = 3;\n\nconst withAchievements = true;\n\nconst ProjectPreview = (props: ProjectPreviewProps): React.ReactElement | null => {\n  const { project } = props;\n\n  if (!project) {\n    return null;\n  }\n\n  const projectTags = project?.tags ? (\n    <div>\n      <Tags tags={project.tags} numToShow={tagsPerProject} />\n    </div>\n  ) : null;\n\n  const projectDates = (\n    <DateRange startDate={project.startDate} endDate={project.endDate} className=\"text-xs text-gray-500\" />\n  );\n\n  const projectStars = getGitHubProjectStars(project);\n  const projectStarsLink: Link = {\n    url: project?.srcURL?.url,\n    caption: 'Stars on GitHub',\n  };\n  const stars =\n    typeof projectStars === 'number' ? (\n      <Stars stars={projectStars} link={projectStarsLink} className=\"text-xs text-gray-500 font-light\" />\n    ) : null;\n\n  /* eslint-disable react/no-array-index-key */\n  const projectSummaryLines = project.summary\n    ? project.summary.map((summaryLine: string | null, index: number) => <p key={index}>{summaryLine}</p>)\n    : null;\n\n  const projectSummary = projectSummaryLines ? <div className=\"mb-3 font-light\">{projectSummaryLines}</div> : null;\n\n  const defaultProjectUrl = project.archived ? undefined : project.demoURL || project.srcURL || project.blogURL;\n\n  const demoLink =\n    project.demoURL && !project.archived ? (\n      <ButtonLink link={project.demoURL} startEnhancer={<IoPlay />} className=\"mr-4\">\n        Demo\n      </ButtonLink>\n    ) : null;\n\n  const blogLink =\n    project.blogURL && !project.archived ? (\n      <ButtonLink link={project.blogURL} startEnhancer={<FaNewspaper />} className=\"mr-4\">\n        Blog\n      </ButtonLink>\n    ) : null;\n\n  const sourceCodeLink =\n    project.srcURL && !project.archived ? (\n      <ButtonLink link={project.srcURL} startEnhancer={<FaGithub />}>\n        Source Code\n      </ButtonLink>\n    ) : null;\n\n  const projectCover = project.cover ? <FluidImage image={project.cover} /> : null;\n\n  const archivedStamp = project?.archived ? (\n    <CardActions>\n      <Archived />\n    </CardActions>\n  ) : null;\n\n  const actions =\n    demoLink || blogLink || sourceCodeLink ? (\n      <CardActions>\n        {demoLink}\n        {blogLink}\n        {sourceCodeLink}\n      </CardActions>\n    ) : null;\n\n  const extraLinksList =\n    project?.links && project?.links.length\n      ? project?.links.map((extraLink: Link, linkIndex) => {\n          return (\n            <li key={linkIndex}>\n              <HyperLink\n                link={extraLink}\n                className=\"text-sm underline\"\n                separatorClassName=\"w-1\"\n                startEnhancer={<BiInfoCircle size={14} />}\n              >\n                {extraLink?.caption || 'Read more'}\n              </HyperLink>\n            </li>\n          );\n        })\n      : null;\n\n  const achievementsLink =\n    withAchievements && project?.achievements && project.achievements.length ? (\n      <Row className=\"mt-3\">\n        <HyperLink\n          link={getProjectAchievementsLink(project.id)}\n          className=\"text-sm underline\"\n          separatorClassName=\"w-1\"\n          startEnhancer={<GiAchievement size={18} />}\n        >\n          Achievements\n        </HyperLink>\n        <Badge className=\"ml-2\">\n          <small>{project.achievements.length}</small>\n        </Badge>\n      </Row>\n    ) : null;\n\n  const externalLinks = extraLinksList ? <ul className=\"mt-3\">{extraLinksList}</ul> : null;\n\n  return (\n    <Card>\n      <CardMedia link={defaultProjectUrl}>{projectCover}</CardMedia>\n      <CardContent>\n        <CardTitle link={defaultProjectUrl}>{project.name}</CardTitle>\n        <Row className=\"mb-3 justify-between\">\n          <div>{projectDates}</div>\n          <div>{stars}</div>\n        </Row>\n        {projectSummary}\n        {projectTags}\n        {achievementsLink}\n        {externalLinks}\n      </CardContent>\n      {actions}\n      {archivedStamp}\n    </Card>\n  );\n};\n\nexport default ProjectPreview;\n","import React from 'react';\n\nimport { Project } from '../../types/Project';\nimport ProjectPreview from './ProjectPreview';\nimport Cards from '../shared/Cards';\n\ntype ProjectsListProps = {\n  projects: Project[],\n};\n\nconst ProjectsList = (props: ProjectsListProps): React.ReactElement => {\n  const { projects } = props;\n\n  const projectsElements = projects.map((project) => {\n    return <ProjectPreview project={project} key={project.id} />;\n  });\n\n  return (\n    <Cards>\n      {projectsElements}\n    </Cards>\n  );\n};\n\nexport default ProjectsList;\n","import React, { ChangeEvent } from 'react';\nimport Row from '../shared/Row';\n\nexport type SortOption = 'startDateAsc' | 'startDateDesc' | 'starsDesc';\n\nexport const sortByStartDateAsc: SortOption = 'startDateAsc';\nexport const sortByStartDateDesc: SortOption = 'startDateDesc';\nexport const sortByStarsDesc: SortOption = 'starsDesc';\n\ntype Sorter = {\n  title: string,\n  hidden?: boolean,\n}\n\ntype Sorters = Record<SortOption, Sorter>;\n\nconst sorters: Sorters = {\n  [sortByStartDateDesc]: {\n    title: '➘ start date',\n  },\n  [sortByStartDateAsc]: {\n    title: '➚ start date',\n    hidden: true,\n  },\n  [sortByStarsDesc]: {\n    title: '➘ stars',\n  },\n};\n\nexport const supportedSortOptions: SortOption[] = Object\n  .keys(sorters)\n  // @ts-ignore\n  .filter((sortOption: SortOption) => !sorters[sortOption].hidden);\n\ntype ProjectFiltersProps = {\n  sortBy: SortOption,\n  onSort: (sortKey: SortOption) => void,\n};\n\nconst ProjectFilters = (props: ProjectFiltersProps): React.ReactElement => {\n  const { onSort, sortBy } = props;\n\n  const sorterOptions = Object.keys(sorters)\n    .filter((sorterKey: string) => {\n      const sorter = sorters[sorterKey as SortOption];\n      return !sorter?.hidden;\n    })\n    .map((sorterKey: string) => {\n      const sorter = sorters[sorterKey as SortOption];\n      return (\n        <option key={sorterKey} value={sorterKey}>\n          {sorter.title}\n        </option>\n      );\n    });\n\n  const onSortChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const selectedKey: SortOption = event.target.value as SortOption;\n    onSort(selectedKey);\n  };\n\n  return (\n    <div>\n      <Row>\n        <div className=\"text-sm text-gray-500 mr-1\">\n          Sort by:\n        </div>\n        <div>\n          <select onChange={onSortChange} defaultValue={sortBy} className=\"text-sm\">\n            {sorterOptions}\n          </select>\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProjectFilters;\n","// If it is server-side-rendering, we don't have an access to document.\n// @see: https://www.gatsbyjs.com/docs/using-client-side-only-packages/\nexport const isSSR = typeof document === 'undefined';\n","import React, { useEffect, useState } from 'react';\n\nimport { Project as ProjectType, Projects as ProjectsType } from '../../types/Project';\nimport ProjectsList from '../elements/ProjectsList';\nimport PageLayout from '../layouts/PageLayout';\nimport PageHeader from '../shared/PageHeader';\nimport Badge from '../shared/Badge';\nimport Row from '../shared/Row';\nimport SEO from '../shared/SEO';\nimport ProjectFilters, {\n  sortByStarsDesc,\n  sortByStartDateAsc,\n  sortByStartDateDesc,\n  SortOption,\n  supportedSortOptions,\n} from '../elements/ProjectFilters';\nimport { getGitHubProjectStars, getTotalGetHubProjectStars, projectMapToArray } from '../../utils/project';\nimport Stars from '../shared/Stars';\nimport { getStringSearchParam, setSearchParam } from '../../utils/url';\n\ntype ProjectsScreenProps = {\n  projects: ProjectsType,\n};\n\ntype ProjectSorter = {\n  // Returns -1, 0, +1.\n  sort: (a: ProjectType, b: ProjectType) => number,\n};\n\ntype ProjectSorters = Record<SortOption, ProjectSorter>;\n\nconst SORT_PARAM_NAME = 'sort';\n\n// @ts-ignore\nconst projectSorters: ProjectSorters = {\n  [sortByStartDateDesc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      if (!a?.startDate || !b.startDate || a.startDate === b.startDate) {\n        return 0;\n      }\n      return a.startDate > b.startDate ? -1 : 1;\n    },\n  },\n  [sortByStartDateAsc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      if (!a?.startDate || !b.startDate || a.startDate === b.startDate) {\n        return 0;\n      }\n      return a.startDate < b.startDate ? -1 : 1;\n    },\n  },\n  [sortByStarsDesc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      const aStars = getGitHubProjectStars(a) || 0;\n      const bStars = getGitHubProjectStars(b) || 0;\n      if (aStars === bStars) {\n        return 0;\n      }\n      return aStars > bStars ? -1 : 1;\n    },\n  },\n};\n\nconst getDefaultSortOption = (): SortOption => {\n  const defaultOption = sortByStartDateDesc;\n  // @ts-ignore\n  // const sortFromURL: SortOption = getStringSearchParam(SORT_PARAM_NAME, defaultOption);\n  // if (supportedSortOptions.includes(sortFromURL)) {\n  //   return sortFromURL;\n  // }\n  return defaultOption;\n};\n\nconst ProjectsScreen = (props: ProjectsScreenProps): React.ReactElement => {\n  const { projects } = props;\n\n  const [sortBy, setSortBy] = useState<SortOption>(getDefaultSortOption());\n  // eslint-disable-next-line max-len\n  const [filteredProjects, setFilteredProjects] = useState<ProjectType[]>(projectMapToArray(projects));\n\n  const onSort = (newSortOption: SortOption): void => {\n    setSearchParam(SORT_PARAM_NAME, newSortOption);\n    setSortBy(newSortOption);\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    const sortedProjects = [...filteredProjects].sort(projectSorters[sortBy].sort);\n    setFilteredProjects(sortedProjects);\n  }, [sortBy]);\n\n  const projectsNum = filteredProjects.length;\n\n  return (\n    <PageLayout>\n      <SEO title=\"Projects\" description=\"Projects and experiments that help people learn\" />\n      <Row>\n        <PageHeader>Projects</PageHeader>\n        <Badge className=\"ml-3 self-start\">{projectsNum}</Badge>\n      </Row>\n      {/* <Row className=\"mb-6 justify-between\"> */}\n      {/* <ProjectFilters onSort={onSort} sortBy={sortBy} /> */}\n      {/* <Row className=\"ml-3\">\n          <div className=\"text-sm text-gray-500 mr-1\">\n            Total stars:\n          </div>\n          <Stars stars={getTotalGetHubProjectStars(projects)} />\n        </Row> */}\n      {/* </Row> */}\n      <ProjectsList projects={filteredProjects} />\n    </PageLayout>\n  );\n};\n\nexport default ProjectsScreen;\n","import React from 'react';\n\nimport ProjectsScreen from '../components/screens/ProjectsScreen';\nimport { projects } from '../data/newprojects';\n\nconst Projects = (): React.ReactElement => {\n  return (\n    <ProjectsScreen projects={projects} />\n  );\n};\n\nexport default Projects;\n"],"names":["GenIcon","module","exports","props","children","link","headerElement","React","H","level","hLevel","linkElement","HyperLink","className","Row","_project$srcURL","project","projectTags","tags","Tags","numToShow","projectDates","DateRange","startDate","endDate","projectStars","getGitHubProjectStars","projectStarsLink","url","srcURL","caption","stars","Stars","projectSummaryLines","summary","map","summaryLine","index","key","projectSummary","defaultProjectUrl","archived","undefined","demoURL","blogURL","demoLink","ButtonLink","startEnhancer","IoPlay","blogLink","FaNewspaper","sourceCodeLink","FaGithub","projectCover","cover","FluidImage","image","archivedStamp","CardActions","Archived","actions","extraLinksList","links","length","extraLink","linkIndex","separatorClassName","BiInfoCircle","size","achievementsLink","withAchievements","achievements","getProjectAchievementsLink","id","GiAchievement","Badge","externalLinks","Card","CardMedia","CardContent","CardTitle","name","projects","projectsElements","ProjectPreview","Cards","sortByStartDateAsc","sortByStartDateDesc","sortByStarsDesc","sorters","title","hidden","Object","keys","filter","sortOption","projectSorters","sort","a","b","aStars","bStars","sortBy","setSortBy","useState","filteredProjects","setFilteredProjects","projectMapToArray","useEffect","sortedProjects","_toConsumableArray","projectsNum","PageLayout","SEO","description","PageHeader","ProjectsList","Projects","ProjectsScreen"],"sourceRoot":""}