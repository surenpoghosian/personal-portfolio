{"componentChunkName":"component---src-templates-post-tsx-content-file-path-src-posts-2021-network-attached-watering-system-index-mdx","path":"/blog/2021/network-attached-watering-system/","result":{"data":{"mdx":{"id":"ff856776-d2bb-51eb-8cde-10549f14a412","body":"\n<span style={{ color: 'white' }}>.</span>\n![Prototype](./assets/flower.jpg)\n\nFor this project, I built a network-attached watering system using ESP32 and LoRa to collect soil data with advanced sensors. The devices communicate with each other and send information to a master device. This master device then forwards the data to a server, where it is saved in a database. To make it easy to monitor, I set up a Telegram bot for each user so they can check the soil conditions directly from their phone.\n\n## How the System Works\n\nI connected ESP32 boards to soil moisture sensors, and they send data through LoRa modules (which have a long-range signal) to a master device. The master device collects all the data and sends it to a server. From there, the data is stored in a database and displayed on a Telegram bot, which users can check to see the current soil moisture levels.\n\n### Main Parts of the System:\n\n-\t**ESP32 with embedded LoRa** for processing data modules and it over long distances\n-\t**Soil moisture sensors** to collect data\n-\t**Master device** to gather the data\n-\t**Server** to save the information\n-\t**Telegram bot** for users to view the data\n\n## Testing LoRa: Checking How Far It Can Go\n\n![Prototype](./assets/master.jpg)\n\nOne of the biggest challenges in this project was testing how far the LoRa signal could reach. LoRa is great for long-range communication, but I wanted to see how far it could go in different areas. In open fields, the signal was strong and worked over several kilometers. In places with trees or buildings, the range was shorter but still good enough for most uses, especially for monitoring large fields or gardens.\n\n![Prototype](./assets/slave2.jpg)\n\nThis test helped me understand the limits of LoRa, and I was happy to see that it worked well even in tough conditions.\n\n## Testing the Watering Mechanism\n\n![Prototype](./assets/watering_system.jpg)\n\nTo test the watering system, I connected it to a water pump and used a sponge as the test soil. The soil sensor was inserted into the sponge to measure its moisture level, simulating real soil conditions. When the sponge became too dry, the system automatically activated the water pump to start watering.\n\nThis experiment showed how well the system could manage watering based on the sensor’s data. The soil sensor provided accurate readings, and the water pump only turned on when necessary, making the whole process efficient and controlled.\n\n## Using Telegram Bots for Easy Monitoring\n\nOnce the data was being collected, I needed a simple way for users to access it. I set up Telegram bots so that users could receive real-time updates about their soil. The bot would notify users when the soil needed watering, making it easy for them to monitor the fields without needing a special app.\n\nWith a few taps on their phone, users could check moisture levels, get alerts, and even control the watering system based on the data collected.\n\n## Conclusion\n\nThis project was a fun and rewarding challenge. By combining ESP32, LoRa, and sensors, I created a system that helps people monitor soil conditions easily. The low-power LoRa modules allowed long-distance communication, and the Telegram bots made it simple to access data in real time.\n\nBuilding this network-attached watering system showed me how useful IoT (Internet of Things) devices can be in managing fields and gardens. If you’re interested in creating smart systems for monitoring and automation, I recommend trying out ESP32 and LoRa for your next project!\n\n","fields":{"slug":"/blog/2021/network-attached-watering-system/"},"internal":{"contentFilePath":"/home/runner/work/personal-portfolio/personal-portfolio/src/posts/2021/network-attached-watering-system/index.mdx"},"frontmatter":{"title":"Creating a Network-Attached Watering System: Using ESP32 and LoRa for Soil Data Collection","summary":"In this project, I built a network-attached watering system using ESP32 and a LoRa module to collect soil information with advanced sensors. The devices communicate among themselves, sending data to a master device that relays it to a server. This information is stored in a database and visualized through a Telegram bot for each user, facilitating effective monitoring and analysis of soil conditions.","date":"03 January, 2020","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/76fc77643d1cb4ee66b94e4e1eed1193/ecad4/cover.jpg","srcSet":"/static/76fc77643d1cb4ee66b94e4e1eed1193/65114/cover.jpg 750w,\n/static/76fc77643d1cb4ee66b94e4e1eed1193/ecad4/cover.jpg 768w","sizes":"100vw"},"sources":[{"srcSet":"/static/76fc77643d1cb4ee66b94e4e1eed1193/9e21e/cover.webp 750w,\n/static/76fc77643d1cb4ee66b94e4e1eed1193/dfdf5/cover.webp 768w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6666666666666666}}}}}},"pageContext":{"slug":"/blog/2021/network-attached-watering-system/","frontmatter":{"title":"Creating a Network-Attached Watering System: Using ESP32 and LoRa for Soil Data Collection","summary":"In this project, I built a network-attached watering system using ESP32 and a LoRa module to collect soil information with advanced sensors. The devices communicate among themselves, sending data to a master device that relays it to a server. This information is stored in a database and visualized through a Telegram bot for each user, facilitating effective monitoring and analysis of soil conditions.","cover":"assets/cover.png","date":"2020-01-03T00:00:00.000Z"}}},"staticQueryHashes":[],"slicesMap":{}}